#!/bin/bash

rusfdc_methods='list_custom_object list_object_field create_nested_record generate_nested_record_template retrieve_layout_with_field_info'
list_object_field_opts='--name'
create_nested_record_opts='--name --file'
generate_nested_record_template_opts='--parent --child'
retrieve_layout_with_field_info_opts='--name'

get_rusfdc_opts() {
  local opts
  target=$1

  case ${target} in
    help) opts=$rusfdc_methods ;;
    rusfdc) opts=$rusfdc_methods ;;
    list_object_field) opts=$list_object_field_opts ;;
    create_nested_record) opts=$create_nested_record_opts ;;
    generate_nested_record_template) opts=$generate_nested_record_template_opts ;;
    retrieve_layout_with_field_info) opts=$retrieve_layout_with_field_info_opts ;;
    *) opts='' ;;
  esac

  echo $opts
  return
}

_rusfdc() {
  local current_word previous_word opts

  COMPREPLY=()
  current_word=${COMP_WORDS[COMP_CWORD]}
  previous_word=${COMP_WORDS[COMP_CWORD - 1]} 
  command=${COMP_WORDS[1]} 

  opts=`get_rusfdc_opts ${previous_word}`
  if [ -z "$opts" ]; then
    opts=`get_rusfdc_opts ${command}`
  fi

  COMPREPLY=( $(compgen -W '${opts}' -- $current_word) )

  return 0
}
complete -F _rusfdc rusfdc
